#include <stdio.h>
#include <stdbool.h>

#define MAX_SIZE 100

// Function to print subsets
void printSubset(int subset[], int size) {
    printf("{ ");
    for (int i = 0; i < size; i++) {
        printf("%d ", subset[i]);
    }
    printf("}\n");
}

// Function to recursively find subsets with given sum
void findSubsets(int set[], int subset[], int n, int sum, int index, int subsetSize) {
    if (sum == 0) {
        // If sum becomes 0, print the subset
        printSubset(subset, subsetSize);
        return;
    }

    // If we reached the end of the array or sum becomes negative, return
    if (index >= n || sum < 0) {
        return;
    }

    // Include current element in the subset
    subset[subsetSize] = set[index];
    findSubsets(set, subset, n, sum - set[index], index + 1, subsetSize + 1);

    // Exclude current element from the subset
    findSubsets(set, subset, n, sum, index + 1, subsetSize);
}

// Function to initialize the subset finding process
void sumOfSubsets(int set[], int n, int sum) {
    int subset[MAX_SIZE];
    findSubsets(set, subset, n, sum, 0, 0);
}

int main() {
    int set[] = {1, 3, 5, 7, 9};
    int n = sizeof(set) / sizeof(set[0]);
    int sum = 12;

    printf("Subsets with sum %d are:\n", sum);
    sumOfSubsets(set, n, sum);

    return 0;
}
