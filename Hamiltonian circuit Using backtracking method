#include <stdio.h>
#include <stdbool.h>

#define V 5 // Number of vertices

// Function to check if the current vertex can be added to the Hamiltonian circuit
bool isSafe(int v, bool graph[V][V], int path[], int pos) {
    if (!graph[path[pos - 1]][v]) // If there's no edge between the last vertex in the path and v
        return false;

    // Check if the vertex has already been visited
    for (int i = 0; i < pos; i++)
        if (path[i] == v)
            return false;

    return true;
}

// Recursive function to find Hamiltonian circuit starting from vertex 'pos'
bool hamiltonianCircuitUtil(bool graph[V][V], int path[], int pos) {
    // Base case: If all vertices are included in the path, return true if there's an edge from the last vertex to the first vertex
    if (pos == V) {
        if (graph[path[pos - 1]][path[0]])
            return true;
        else
            return false;
    }

    // Try different vertices as the next candidate in the path
    for (int v = 1; v < V; v++) {
        if (isSafe(v, graph, path, pos)) {
            path[pos] = v;

            // Recur to construct the rest of the path
            if (hamiltonianCircuitUtil(graph, path, pos + 1))
                return true;

            // If adding vertex 'v' doesn't lead to a solution, backtrack
            path[pos] = -1;
        }
    }

    return false;
}

// Function to find Hamiltonian circuit in the given graph
void hamiltonianCircuit(bool graph[V][V]) {
    int path[V]; // To store the Hamiltonian circuit

    // Initialize all vertices as not included in the Hamiltonian circuit
    for (int i = 0; i < V; i++)
        path[i] = -1;

    // Start from the 0th vertex (assuming the graph is connected)
    path[0] = 0;

    if (hamiltonianCircuitUtil(graph, path, 1)) {
        printf("Hamiltonian Circuit found: ");
        for (int i = 0; i < V; i++)
            printf("%d ", path[i]);
        printf("%d ", path[0]); // Complete the cycle by adding the starting vertex at the end
        printf("\n");
    } else {
        printf("Hamiltonian Circuit does not exist\n");
    }
}

int main() {
    bool graph[V][V] = { {0, 1, 0, 1, 0},
                         {1, 0, 1, 1, 1},
                         {0, 1, 0, 0, 1},
                         {1, 1, 0, 0, 1},
                         {0, 1, 1, 1, 0} };

    hamiltonianCircuit(graph);

    return 0;
}
