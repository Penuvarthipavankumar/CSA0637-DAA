#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>

// Function to remove non-alphabetic characters and convert to lowercase
void cleanString(char str[]) {
    int i, j = 0;
    for (i = 0; str[i] != '\0'; i++) {
        if (isalpha(str[i])) {
            str[j++] = tolower(str[i]);
        }
    }
    str[j] = '\0'; // Null terminate the cleaned string
}

// Function to check if a string is palindrome recursively
bool isPalindrome(char str[], int start, int end) {
    // Base case: if there's only one character or none, it's a palindrome
    if (start >= end)
        return true;

    // If the characters at the start and end indices are not the same, it's not a palindrome
    if (str[start] != str[end])
        return false;

    // Recursive case: check the substring by moving start and end indices towards each other
    return isPalindrome(str, start + 1, end - 1);
}

int main() {
    char str[100];
    
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    // Clean the string from non-alphabetic characters and convert to lowercase
    cleanString(str);

    // Check if the cleaned string is a palindrome
    if (isPalindrome(str, 0, strlen(str) - 1))
        printf("The entered string is a palindrome.\n");
    else
        printf("The entered string is not a palindrome.\n");

    return 0;
}
